# https://aka.ms/yaml
parameters:
  vmImage:
    - 'ubuntu-18.04'
    - 'ubuntu-16.04'
    - 'vs2017-win2016'
    - 'windows-2019'
    - 'macOS-10.14'
    - 'macOS-10.15'
  linuxContainer:
    - 'mcr.microsoft.com/powershell:latest'
    - 'mcr.microsoft.com/powershell:preview'
    - 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'
  windowsContainer:
    - 'mcr.microsoft.com/powershell:windowsservercore-1809'
    - 'mcr.microsoft.com/powershell:preview-windowsservercore-1809'
    #Nano Requires https://github.com/microsoft/azure-pipelines-tasks/issues/11448 to be fixed first
    #- 'mcr.microsoft.com/powershell:nanoserver-1809'
    #- 'mcr.microsoft.com/powershell:preview-nanoserver-1809'
    - 'mcr.microsoft.com/dotnet/framework/sdk:latest'
    - 'mcr.microsoft.com/dotnet/framework/runtime:latest'
  psVersion:
    - pwsh
    - powershell
  script: "$PSVersionTable | Out-String"

jobs:
#Each and If Notes:
#1. Must preface with a -
#2. if your next line is a sequence, must always end with :
#3. next line must be indented even if it doesn't match the indentation of previous lines (it will fix the indentation during expansion)

#Container Based Jobs
- ${{ each container in parameters.linuxContainer }}:
  - job:
    displayName: 'Linux Container ${{container}}'
    condition: false
    pool:
      vmImage: ubuntu-18.04
    container: ${{container}}
    steps:
      - powershell: ${{parameters.script}}

- ${{ each container in parameters.windowsContainer }}:
  - ${{ each psVersion in parameters.psVersion }}:
    - ${{ if not(and(contains(container,'dotnet/framework/runtime'),eq(psVersion,'pwsh'))) }}: #don't try pwsh.exe on dotnet framework container
      - job:
        displayName: 'Windows Container ${{container}} ${{psVersion}}'
        pool:
          vmImage: windows-2019
        container: ${{container}}
        steps:
          - ${{psversion}}: ${{parameters.script}}

#Host Agent Based Jobs
- ${{ each vmImage in parameters.vmImage }}:
  - ${{ each psVersion in parameters.psVersion }}:
    - ${{ if not(and(not(contains(vmimage,'win')),eq(psVersion,'powershell'))) }}: #don't try powershell.exe on non-windows systems
      - template: PSJob.yml
        parameters:
          vmImage: ${{vmImage}}
          psVersion: ${{psVersion}}
          script: ${{parameters.script}}
