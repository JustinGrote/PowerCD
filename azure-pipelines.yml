# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

strategy:
  maxParallel: 10
  matrix:
    windows-latest-powershell:
      os: windows-latest
      psversion: powershell
    windows-latest-pwsh:
      os: windows-latest
      psversion: pwsh
    ubuntu-latest-pwsh:
      os: ubuntu-latest
      psversion: pwsh
    macOS-latest-pwsh:
      os: macOS-latest
      psversion: pwsh
    vs2017-win2016-powershell:
      os: vs2017-win2016
      psversion: powershell
    vs2017-win2016-pwsh:
      os: vs2017-win2016
      psversion: pwsh
pool:
  vmImage: $(os)
steps:
- script: "$(psversion) -noninteractive -noprofile -f build.ps1"
  displayName: 'Powershell Module Build and Test'

- task: PublishTestResults@2
  displayName: 'Pester Test Results'
  inputs:
    testRunner: 'NUnit'
    testResultsFiles: '**/*TestResults*.xml'
    testRunTitle: 'Pester'

- task: CopyFiles@2
  displayName: 'Copy Completed Powershell Module to Artifact Staging Area'
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)/BuildOutput'
    contents: '*.zip'
    targetfolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@0
  displayName: 'Capture Powershell Module as Artifact'
  inputs:
    artifactName: '$(os)-$(psversion)'
    targetpath: '$(Build.ArtifactStagingDirectory)'