#GitLab Flow Configuration
#https://docs.gitlab.com/ee/workflow/gitlab_flow.html
#With Gitlab Flow, all development happens in master, with feature branches created and PR'd into master. Master is the same as "staging" and all commits are built and deployed to the staging environment.
#For releases, you create additional environments
#For a library, "production" represents the stable package that will be published to Powershell Gallery,etc. and "master" represents beta/prerelease builds. You can also use the "preview" or "release/X.X" branches to denote previews or release candidates, which will also be pushed to prerelease in galleries by the CI
#For a script, "production" represents the production deployment environment

#The CI will tag and deploy all releases pushed to a "support" branch denoted by the regex below to the appropriate environment
#You can also create dedicated release branches for a particular stable or long-term support version (e.g. release/2.0.0) and then tag within that branch for LTS updates

branches:
  master:
    mode: ContinuousDeployment
    tag: beta
  support:
    regex: ^(pre)?prod(uction)?$|^pre(view)?$|^test(ing)?$|^qa$|^support|environment[/-]
    mode: ContinuousDeployment

#Custom commit messages to support Convential Commits
#https://www.conventionalcommits.org/en/v1.0.0/
major-version-bump-message: (^(breaking|major)(\(.*\))?:)|(\+semver:\s?(breaking|major))|BREAKING CHANGE(:)
minor-version-bump-message: (^(feat(ure)?|minor)(\(.*\))?:)|(\+semver:\s?(feat(ure)?|minor))
patch-version-bump-message: (^((bug)?fix|patch|perf|refactor)(\(.*\))?:)|(\+semver:\s?((bug)?fix|patch))
no-bump-message: (^(none|skip|build|ci|docs|style|test)(\(.*\))?:)|(\+semver:\s?(none|skip))

#Set the build numbers to be xxx, example 0.1.0-myfeature001 or 0.2.1-beta001. This allows for longer feature branch names, and can be increased for more active projects
#You should set this to the number of commits you expect to have for a given branch before merging.
#For instance, if vNext is never going to contain more than 99 commits before you push it to master as a new version, you can set this to 2. 3 is good for all but the largest projects.
legacy-semver-padding: 3
build-metadata-padding: 3
commits-since-version-source-padding: 3