# https://aka.ms/yaml
parameters:
  vmImage:
    - 'ubuntu-18.04'
    - 'ubuntu-16.04'
    - 'vs2017-win2016'
    - 'windows-2019'
    - 'macOS-10.14'
    - 'macOS-10.15'
  linuxContainer:
    # - 'mcr.microsoft.com/powershell:lts-ubuntu-18.04' - Need dotnet to build here
    # - 'mcr.microsoft.com/powershell:ubuntu-18.04'
    # - 'mcr.microsoft.com/powershell:preview-ubuntu-18.04'
    - 'mcr.microsoft.com/dotnet/core/sdk:3.1-bionic'
    #Alpine containers don't meet the minimum Azure Devops requirements: https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops#requirements
  windowsContainer:
    - 'mcr.microsoft.com/powershell:windowsservercore-1809'
    - 'mcr.microsoft.com/powershell:preview-windowsservercore-1809'
    #TODO: Figure out a way to track these so they are always using the underlying cached image
    - 'mcr.microsoft.com/dotnet/framework/runtime@sha256:85433707a809232402827a359c80d0aa08226e7833aa2914be2113e694d2b6ae'
    - 'mcr.microsoft.com/powershell:lts-windowsservercore-1809'
    #Nano Requires https://github.com/microsoft/azure-pipelines-tasks/issues/11448 to be fixed first
    - 'mcr.microsoft.com/powershell:nanoserver-1809'
    - 'mcr.microsoft.com/powershell:preview-nanoserver-1809'
  psVersion:
    - pwsh
    - powershell
  script: "$PSVersionTable | Out-String"
stages:
- stage: Build
  #Each and If Notes:
  #1. Must preface with a -
  #2. if your next line is a sequence, must always end with :
  #3. next line must be indented even if it doesn't match the indentation of previous lines (it will fix the indentation during expansion)

  #Host Agent Based Jobs
  jobs:
  - ${{ if ne(parameters.vmImage, 'skip') }}:
    - ${{ each vmImage in parameters.vmImage }}:
      - ${{ each psVersion in parameters.psVersion }}:
        - ${{ if not(and(not(contains(vmimage,'win')),eq(psVersion,'powershell'))) }}: #don't try powershell.exe on non-windows systems
          - template: PSJob.yml
            parameters:
              vmImage: ${{vmImage}}
              psVersion: ${{psVersion}}
              script: ${{parameters.script}}

  #Container Based Jobs
  - ${{ if ne(parameters.linuxContainer, 'skip') }}:
    - ${{ each container in parameters.linuxContainer }}:
      - job:
        displayName: 'Linux Container ${{container}}'
        pool:
          vmImage: ubuntu-18.04
        container: ${{container}}
        steps:
          - powershell: ${{parameters.script}}

  - ${{ if ne(parameters.windowsContainer, 'skip') }}:
    - ${{ each container in parameters.windowsContainer }}:
      - ${{ each psVersion in parameters.psVersion }}:
        - ${{ if not(and(contains(container,'dotnet/framework/runtime'),eq(psVersion,'pwsh'))) }}: #don't try pwsh.exe on dotnet framework container
          - job:
            displayName: 'Windows Container ${{container}} ${{psVersion}}'
            pool:
              vmImage: windows-2019
            container: ${{container}}
            steps:
              - ${{psversion}}: ${{parameters.script}}